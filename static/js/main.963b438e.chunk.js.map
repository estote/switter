{"version":3,"sources":["fbase.js","components/AuthForm.js","routes/Auth.js","components/Sweet.js","components/SweetFactory.js","routes/Home.js","routes/Profile.js","components/Navigation.js","components/Router.js","components/App.js","index.js"],"names":["firebaseConfig","apiKey","process","authDomain","projectId","storageBucket","messagingSenderId","appId","REACT_APP_PP_ID","firebase","initializeApp","firebaseInstance","authService","auth","dbService","firestore","storageService","storage","AuthForm","useState","email","setEmail","password","setPassword","newAccount","setNewAccount","error","setError","onChange","event","target","name","value","onSubmit","a","preventDefault","createUserWithEmailAndPassword","signInWithEmailAndPassword","message","type","placeholder","required","onClick","prev","Auth","onSocialClick","provider","GoogleAuthProvider","GithubAuthProvider","signInWithPopup","Sweet","sweetObj","isOwner","editing","setEditing","text","newSweet","setNewSweet","onDeleteClick","window","confirm","doc","id","delete","attachmentUrl","refFromURL","toggleEditing","update","src","width","height","SweetFactory","userObj","sweet","setSweet","attachment","setAttachment","attachmentRef","ref","child","uid","uuidv4","putString","response","getDownloadURL","collection","add","createdAt","Date","now","creatorId","maxLength","accept","theFile","files","reader","FileReader","onloadend","finishedEvent","result","currentTarget","readAsDataURL","Home","sweets","setSweets","useEffect","onSnapshot","snapshot","newArray","docs","map","document","data","Profile","refreshUser","history","useHistory","displayName","newDisplayName","setNewDisplayName","updateProfile","signOut","push","Navigation","to","AppRouter","isLoggedIn","exact","path","App","init","setInit","setUserObj","onAuthStateChanged","user","args","currentUser","Boolean","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.963b438e.chunk.js","sourcesContent":["import firebase from 'firebase/app';\nimport 'firebase/auth';\nimport 'firebase/firestore';\nimport 'firebase/storage';\n\nconst firebaseConfig = {\n  apiKey: process.env.REACT_APP_API_KEY,\n  authDomain: process.env.REACT_APP_AUTH_DOMAIN,\n  projectId: process.env.REACT_APP_PROJECT_ID,\n  storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\n  messagingSenderId: process.env.REACT_APP_MESSAGING_SENDER_ID,\n  appId: process.env.REACT_APP_PP_ID\n};\n\nfirebase.initializeApp(firebaseConfig);\n\nexport const firebaseInstance = firebase;\nexport const authService = firebase.auth();\nexport const dbService = firebase.firestore();\nexport const storageService = firebase.storage();","import { authService } from \"fbase\";\nimport { useState } from \"react\";\n\nconst AuthForm = () => {\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [newAccount, setNewAccount] = useState(true);\n  const [error, setError] = useState(\"\");\n\n  const onChange = (event) => {\n    const {\n      target: { name, value },\n    } = event;\n    if (name === \"email\") {\n      setEmail(value);\n    } else if (name === \"password\") {\n      setPassword(value);\n    }\n  };\n\n  const onSubmit = async (event) => {\n    event.preventDefault();\n    try {\n      let data;\n      if (newAccount) {\n        data = await authService.createUserWithEmailAndPassword(email, password);\n      } else {\n        data = await authService.signInWithEmailAndPassword(email, password);\n      }\n    } catch (error) {\n      setError(error.message);\n    }\n  };\n\n  const toggleAccount = () => setNewAccount((prev) => !prev);\n\n  return (\n    <>\n      <form onSubmit={onSubmit}>\n        <input \n          name=\"email\" \n          type=\"email\" \n          placeholder=\"Email\" \n          required \n          value={email} \n          onChange={onChange} \n        />\n        <input \n          name=\"password\"\n          type=\"password\" \n          placeholder=\"Password\" \n          required \n          value={password}\n          onChange={onChange}\n        />\n        <input \n          type=\"submit\" \n          value={newAccount ? \"Create Account\" : \"Log In\"} \n        />\n        {error}\n      </form>\n      <span onClick={toggleAccount}>\n        {newAccount ? \"Sign In\" : \"Create Account\"}\n      </span>\n    </>\n  );\n};\n\nexport default AuthForm;","import { authService, firebaseInstance } from \"fbase\";\nimport AuthForm from 'components/AuthForm';\n\nconst Auth = () => {\n  const onSocialClick = async (event) => {\n    const {\n      target: { name },\n    } = event;\n    let provider;\n    if (name === \"google\") {\n      provider = new firebaseInstance.auth.GoogleAuthProvider();\n    } else if (name === \"github\") {\n      provider = new firebaseInstance.auth.GithubAuthProvider();\n    }\n    const data = await authService.signInWithPopup(provider);\n  };\n\n  return (\n    <div>\n      <AuthForm />\n      <div>\n        <button onClick={onSocialClick} name=\"google\" >\n          Continue with Google\n        </button>\n        <button onClick={onSocialClick} name=\"github\" >\n          Continue with Github\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default Auth;","import { dbService, storageService } from \"fbase\";\nimport { useState } from \"react\";\n\nconst Sweet = ({ sweetObj, isOwner }) => {\n  const [editing, setEditing] = useState(false);\n  const [newSweet, setNewSweet] = useState(sweetObj.text);\n  const onDeleteClick = async () => {\n    const ok = window.confirm(\"정말로 삭제하시겠습니까?\");\n    if (ok) {\n      await dbService.doc(`sweets/${sweetObj.id}`).delete();\n      if (sweetObj.attachmentUrl !== \"\")\n        await storageService.refFromURL(sweetObj.attachmentUrl).delete();\n    }\n  };\n\n  const toggleEditing = () => setEditing((prev) => !prev);\n  \n  const onChange = (event) => {\n    const {\n      target: { value },\n    } = event;\n    setNewSweet(value);\n  };\n\n  const onSubmit = async(event) => {\n    event.preventDefault();\n    await dbService.doc(`sweets/${sweetObj.id}`).update({ text: newSweet });\n    setEditing(false);\n  };\n\n  return (\n    <div>\n      {editing ? (\n        <>\n          <form onSubmit={onSubmit}>\n            <input onChange={onChange} value={newSweet} required />\n            <input type=\"submit\" value=\"Update Sweet\" />\n          </form>\n          <button onClick={toggleEditing}>Cancel</button>\n        </>\n      ) : (\n        <>\n          <h4>{sweetObj.text}</h4>\n          {sweetObj.attachmentUrl && (\n            <img src={sweetObj.attachmentUrl} width=\"50px\" height=\"50px\" />\n          )}\n          {isOwner && (\n            <>\n              <button onClick={onDeleteClick}>Delete Sweet</button>\n              <button onClick={toggleEditing}>Edit Sweet</button>\n            </>\n          )}\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default Sweet;","import { useState } from \"react\";\nimport { dbService, storageService } from \"fbase\";\nimport { v4 as uuidv4 } from \"uuid\";\n\nconst SweetFactory = ({ userObj }) => {\n  const [sweet,setSweet] = useState(\"\");\n  const [attachment, setAttachment] = useState(\"\");\n\n  const onSubmit = async (event) => {\n    event.preventDefault();\n    let attachmentUrl = \"\";\n    if (attachment !== \"\") { \n      const attachmentRef = storageService.ref().child(`${userObj.uid}/${uuidv4()}`);\n      const response = await attachmentRef.putString(attachment, \"data_url\");\n      attachmentUrl = await response.ref.getDownloadURL();\n    }\n    await dbService.collection(\"sweets\").add({\n      text: sweet,\n      createdAt: Date.now(),\n      creatorId: userObj.uid,\n      attachmentUrl,\n    });\n    setSweet(\"\");\n    setAttachment(\"\");\n  };\n\n  const onChange = (event) => {\n    event.preventDefault();\n    const {\n      target: { value },\n    } = event;\n    setSweet(value);\n  };\n\n  const onFileChange = (event) => {\n    const {\n      target: { files },\n    } = event;\n    const theFile = files[0];\n    const reader = new FileReader();\n    reader.onloadend = (finishedEvent) => {\n      const {\n        currentTarget: { result },\n      } = finishedEvent;\n      setAttachment(result);\n    };\n    reader.readAsDataURL(theFile);\n  };\n\n  const onClearAttachment = () => setAttachment(\"\");\n\n  return (\n    <form onSubmit={onSubmit}>\n      <input\n        value={sweet}\n        onChange={onChange}\n        type=\"text\"\n        placeholder=\"What's on your mind?\"\n        maxLength={120}\n      />\n      <input type=\"file\" accept=\"image/*\" onChange={onFileChange} />\n      <input type=\"submit\" value=\"Sweet\" />\n      {attachment && (\n        <div>\n          <img src={attachment} width=\"50px\" height=\"50px\" />\n          <button onClick={onClearAttachment}>Clear</button>\n        </div>\n      )}\n    </form>\n  );\n};\n\nexport default SweetFactory;","import { dbService } from \"fbase\";\nimport { useEffect, useState } from \"react\";\nimport Sweet from 'components/Sweet';\nimport SweetFactory from 'components/SweetFactory';\n\nconst Home = ({ userObj }) => {\n  const [sweets, setSweets] = useState([]);\n\n  useEffect(() => {\n    dbService.collection(\"sweets\").onSnapshot((snapshot) => {\n      const newArray = snapshot.docs.map((document) => ({\n        id: document.id,\n        ...document.data(),\n      }));\n      setSweets(newArray);\n    });\n  }, []);\n\n  return (\n    <>\n      <SweetFactory userObj={userObj} />\n      <div>\n        {sweets.map((sweet) => (\n          <Sweet \n            key={sweet.id} \n            sweetObj={sweet}\n            isOwner={sweet.creatorId === userObj.uid}\n          />\n        ))}\n      </div>\n    </>\n  );\n};\n\nexport default Home;","import { authService, dbService } from \"fbase\";\nimport { useState, useEffect } from \"react\";\nimport { useHistory } from \"react-router-dom\";\n\nconst Profile = ({ userObj, refreshUser }) => {\n  const history = useHistory();\n  const [newDisplayName, setNewDisplayName] = useState(userObj.displayName);\n\n  const onLogOutClick = () => {\n    authService.signOut();\n    history.push(\"/\");\n  };\n\n  const onChange = (event) => {\n    const {\n      target: { value },\n    } = event;\n    setNewDisplayName(value);\n  };\n\n  const onSubmit = async (event) => {\n    event.preventDefault();\n    if (userObj.displayName !== newDisplayName) {\n      await userObj.updateProfile({ displayName: newDisplayName });\n      refreshUser();\n    }\n  };\n// 필터링 관련 코드!!!\n  // const getMySweets = async () => {\n  //   const sweets = await dbService\n  //     .collection(\"sweets\")\n  //     .where(\"creatorId\", \"==\", userObj.uid)\n  //     .orderBy(\"createdAt\", \"asc\")\n  //     .get();\n\n  //     console.log(sweets.docs.map((doc) => doc.data()));\n  // };\n\n  // useEffect(() => {\n  //   getMySweets();\n  // }, []);\n\n  return (\n    <>\n      <form onSubmit={onSubmit}>\n        <input \n          onChange={onChange} \n          type=\"text\" \n          placeholder=\"Display name\" \n          value={newDisplayName} \n        />\n        <input type=\"submit\" value=\"Update Profile\" />\n      </form>\n      <button onClick={onLogOutClick}>Log Out</button>\n    </>\n  );\n}\n\nexport default Profile;","import { Link } from \"react-router-dom\";\n\nconst Navigation = ({ userObj }) => {\n  return (\n    <nav>\n      <ul>\n        <li>\n          <Link to=\"/\">Home</Link>\n        </li>\n        <li>\n          <Link to=\"/profile\">{userObj.displayName}의 Profile</Link>\n        </li>\n      </ul>\n    </nav>\n  );\n};\n\nexport default Navigation;","import { HashRouter as Router, Route, Switch } from \"react-router-dom\";\nimport Auth from 'routes/Auth';\nimport Home from 'routes/Home';\nimport Profile from 'routes/Profile'\nimport Navigation from './Navigation';\n\nconst AppRouter = ({ isLoggedIn, userObj, refreshUser }) => {\n  return (\n    <Router>\n      {isLoggedIn && <Navigation userObj={userObj} />}\n      <Switch>\n        {isLoggedIn ? (\n          <>\n          <Route exact path = '/'>\n            <Home userObj={userObj} />\n          </Route>\n          <Route exact path = '/profile'>\n            <Profile refreshUser={refreshUser} userObj={userObj} />\n          </Route>\n          </>\n        ) : (\n          <Route exact path = '/'>\n            <Auth />\n          </Route>\n        )}\n      </Switch>\n    </Router>\n  );\n};\n\nexport default AppRouter;","import { useEffect, useState } from \"react\";\nimport AppRouter from 'components/Router';\nimport { authService } from \"fbase\";\n\nfunction App() {\n  const [init, setInit] = useState(false);\n  const [userObj, setUserObj] = useState(null);\n  \n  useEffect(() => {\n    authService.onAuthStateChanged((user) => {\n      if (user) {\n        setUserObj({\n          uid: user.uid,\n          displayName: user.displayName,\n          updateProfile: (args) => user.updateProfile(args),\n        });\n      } else {\n        setUserObj(false);\n      }\n      setInit(true);\n    });\n  }, []);\n\n  const refreshUser = () => {\n    const user = authService.currentUser;\n    setUserObj({\n      uid: user.uid,\n      displayName: user.displayName,\n      updateProfile: (args) => user.updateProfile(args),\n    });\n  };\n\n  return (\n    <>\n      {init ? (\n        <AppRouter \n          refreshUser={refreshUser}\n          isLoggedIn={Boolean(userObj)} \n          userObj={userObj}\n        />\n      ) : (\n        \"initializing...\"\n      )}\n\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from 'components/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);"],"sourceRoot":""}